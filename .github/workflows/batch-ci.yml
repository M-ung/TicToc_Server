name: Batch Module CI - Build & Push Docker Image

on:
  push:
    branches:
      - xx
#      - main
#      - deploy/**

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Repository Checkout
        uses: actions/checkout@v3

      - name: 🏗️ Set up Gradle with Caching
        uses: gradle/gradle-build-action@v2

      - name: 🛠️ Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🏗️ Use System Gradle
        run: gradle clean build -x test

      - name: 🔍 Check if JAR exists
        run: ls -lh tictoc-batch/build/libs/

      - name: 🔑 Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📄 Create .env
        run: |
          echo "Creating .env file..."
          cat <<EOF > .env
          ${{ secrets.ENV }}
          EOF
          echo ".env 파일 생성했습니다."

      - name: 🛠️ Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tictoc-batch:latest -f tictoc-batch/Dockerfile tictoc-batch

      - name: 🔍 Verify Docker Images
        run: docker images

      - name: 🧪 Run Tests
        run: echo "테스트 코드 실행 (실제 프로젝트에서는 여기에 테스트 스크립트를 추가)"

      - name: 📤 Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tictoc-batch:latest

      - name: 🚀 Trigger CD Workflow
        run: |
          curl -X POST -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/cd.yml/dispatches \
          -d '{"ref":"main"}'