name: API Module CD - Deploy to EC2

on:
  workflow_run:
    workflows: ["API Module CI - Build & Push Docker Image"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "✅ EC2 접속 완료. 배포를 시작합니다..."

            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/tictoc-api:latest

            if ! docker network ls | grep -q tic-toc-net; then
              echo "🕸️ Docker 네트워크가 존재하지 않습니다. 생성합니다."
              docker network create tic-toc-net
              echo "✅ Docker 네트워크 생성 완료!"
            fi

            if ! docker ps --format '{{.Names}}' | grep -q redis; then
              echo "🎈 Redis가 실행 중이 아닙니다. 실행합니다."
              docker-compose -f ~/tictoc-deploy/docker-compose.yml up -d redis
              echo "✅ Redis 실행 완료!"
            else
              echo "🎈 Redis가 이미 실행 중입니다."
            fi

            echo "현재 실행 중인 컨테이너 확인..."
            if docker ps | grep -q tictoc-blue; then
              echo "🔵 Blue 컨테이너가 실행 중입니다. Green을 업데이트합니다."
              docker-compose -f ~/tictoc-deploy/docker-compose.backend.yml up -d tictoc-green

              until docker ps | grep -q tictoc-green; do
                echo "⏳ Green 컨테이너가 아직 실행되지 않았습니다. 2초 후 다시 확인..."
                sleep 2
              done
              echo "✅ Green 컨테이너가 정상적으로 실행되었습니다!"

              echo "🛑 기존 Blue 컨테이너를 종료합니다."
              docker stop tictoc-blue && docker rm tictoc-blue

              echo "🔵 Blue 컨테이너를 다시 실행합니다."
              docker-compose -f ~/tictoc-deploy/docker-compose.backend.yml up -d tictoc-blue
            
              until docker ps | grep -q tictoc-blue; do
                echo "⏳ Blue 컨테이너가 아직 실행되지 않았습니다. 2초 후 다시 확인..."
                sleep 2
              done
              echo "✅ Blue 컨테이너도 새 버전으로 업데이트 완료!"

            else
              echo "🟢 Green 컨테이너가 실행 중입니다. Blue를 업데이트합니다."
              docker-compose -f ~/tictoc-deploy/docker-compose.backend.yml up -d tictoc-blue
            
              until docker ps | grep -q tictoc-blue; do
                echo "⏳ Blue 컨테이너가 아직 실행되지 않았습니다. 2초 후 다시 확인..."
                sleep 2
              done
              echo "✅ Blue 컨테이너가 정상적으로 실행되었습니다!"

              echo "🛑 기존 Green 컨테이너를 종료합니다."
              docker stop tictoc-green && docker rm tictoc-green

              echo "🟢 Green 컨테이너를 다시 실행합니다."
              docker-compose -f ~/tictoc-deploy/docker-compose.backend.yml up -d tictoc-green
            
              until docker ps | grep -q tictoc-green; do
                echo "⏳ Green 컨테이너가 아직 실행되지 않았습니다. 2초 후 다시 확인..."
                sleep 2
              done
              echo "✅ Green 컨테이너도 새 버전으로 업데이트 완료!"
            fi

            echo "🔄 Nginx가 자동으로 로드 밸런싱을 조정합니다."
            sudo systemctl restart nginx
            echo "✅ 무중단 배포 완료!"


      - name: 🗑️ Delete Unused Images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🗑️ 사용되지 않는 Docker 이미지를 삭제합니다."
            docker image prune -f
            echo "✅ 정리 완료!"